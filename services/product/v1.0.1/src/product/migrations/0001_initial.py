# Generated by Django 3.1.8 on 2024-04-19 14:53

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import product.models.fields
import ecommerce_common.models.mixins
import product.models.base
import softdelete.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="RemoteUserAccount",
            fields=[
                (
                    "profile",
                    models.PositiveIntegerField(primary_key=True, serialize=False),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
            ],
            options={
                "db_table": "login_account",
                "managed": False,
                "swappable": "AUTH_USER_MODEL",
            },
        ),
        migrations.CreateModel(
            name="ProductAttributeType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time_deleted",
                    models.DateTimeField(
                        blank=True, default=None, editable=False, null=True
                    ),
                ),
                ("name", models.CharField(max_length=64)),
                (
                    "dtype",
                    models.SmallIntegerField(
                        choices=[
                            (1, "String"),
                            (2, "Integer"),
                            (3, "Positive Integer"),
                            (4, "Float"),
                        ]
                    ),
                ),
            ],
            options={
                "db_table": "product_attribute_type",
            },
            bases=(models.Model, ecommerce_common.models.mixins.MinimumInfoMixin),
        ),
        migrations.CreateModel(
            name="ProductDevIngredient",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time_deleted",
                    models.DateTimeField(
                        blank=True, default=None, editable=False, null=True
                    ),
                ),
                ("name", models.CharField(max_length=128)),
                (
                    "category",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, "Raw Material"),
                            (2, "Work In Progress"),
                            (3, "Finished Goods"),
                            (4, "Consumables"),
                            (5, "Equipments"),
                        ]
                    ),
                ),
            ],
            options={
                "db_table": "product_dev_ingredient",
            },
            bases=(models.Model, ecommerce_common.models.mixins.MinimumInfoMixin),
        ),
        migrations.CreateModel(
            name="ProductmgtChangeSet",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("done_by", models.CharField(max_length=16)),
                (
                    "time_created",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("object_id", models.CharField(db_column="object_id", max_length=100)),
                (
                    "content_type",
                    models.ForeignKey(
                        db_column="content_type",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "db_table": "productmgt_soft_delete_changeset",
            },
            bases=(models.Model, softdelete.models._SoftDeleteIdSerializerMixin),
        ),
        migrations.CreateModel(
            name="ProductSaleableItem",
            fields=[
                (
                    "time_deleted",
                    models.DateTimeField(
                        blank=True, default=None, editable=False, null=True
                    ),
                ),
                ("name", models.CharField(max_length=128)),
                ("usrprof", models.PositiveIntegerField(db_column="usrprof")),
                (
                    "id",
                    models.PositiveIntegerField(
                        db_column="id",
                        db_index=True,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("visible", models.BooleanField(default=False)),
                ("price", models.FloatField(default=0.0)),
                (
                    "unit",
                    models.SmallIntegerField(
                        choices=[
                            (1, "unit"),
                            (2, "dz(dozen)"),
                            (65, "day"),
                            (66, "hour"),
                            (67, "minute"),
                            (68, "second"),
                            (69, "week"),
                            (70, "month"),
                            (71, "year"),
                            (129, "g"),
                            (130, "kg"),
                            (131, "t (Mg)"),
                            (132, "kt"),
                            (133, "Mt"),
                            (134, "Gt"),
                            (135, "mg"),
                            (136, "μg"),
                            (137, "ng"),
                            (138, "ton (US)"),
                            (139, "ton (UK)"),
                            (140, "lb"),
                            (141, "oz"),
                            (193, "cm"),
                            (194, "m"),
                            (195, "km"),
                            (196, "mm"),
                            (197, "μm"),
                            (198, "nm"),
                            (199, "in"),
                            (200, "ft"),
                            (201, "yd"),
                            (202, "mi"),
                            (203, "nmi"),
                            (257, "L"),
                            (258, "fl oz"),
                            (259, "mL"),
                            (260, "bbl"),
                            (261, "qt (imperial)"),
                            (262, "qt (US)"),
                            (263, "qt (UK)"),
                            (264, "tsp"),
                            (265, "tbsp (US)"),
                            (266, "tbsp (imperial)"),
                            (267, "gal (US)"),
                            (268, "gal (imperial)"),
                        ]
                    ),
                ),
            ],
            options={
                "db_table": "product_saleable_item",
                "abstract": False,
            },
            bases=(
                models.Model,
                product.models.base._RelatedFieldMixin,
                ecommerce_common.models.mixins.MinimumInfoMixin,
            ),
        ),
        migrations.CreateModel(
            name="ProductSaleablePackage",
            fields=[
                (
                    "time_deleted",
                    models.DateTimeField(
                        blank=True, default=None, editable=False, null=True
                    ),
                ),
                ("name", models.CharField(max_length=128)),
                ("usrprof", models.PositiveIntegerField(db_column="usrprof")),
                (
                    "id",
                    models.PositiveIntegerField(
                        db_column="id",
                        db_index=True,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("visible", models.BooleanField(default=False)),
                ("price", models.FloatField(default=0.0)),
            ],
            options={
                "db_table": "product_saleable_package",
                "abstract": False,
            },
            bases=(
                models.Model,
                product.models.base._RelatedFieldMixin,
                ecommerce_common.models.mixins.MinimumInfoMixin,
            ),
        ),
        migrations.CreateModel(
            name="ProductTag",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("usrprof", models.PositiveIntegerField(db_column="usrprof")),
                ("name", models.CharField(max_length=64)),
            ],
            options={
                "db_table": "product_tag",
            },
            bases=(models.Model, ecommerce_common.models.mixins.MinimumInfoMixin),
        ),
        migrations.CreateModel(
            name="ProductTagClosure",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("depth", models.PositiveIntegerField(db_column="depth", default=0)),
                (
                    "ancestor",
                    models.ForeignKey(
                        db_column="ancestor",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="descendants",
                        to="product.producttag",
                    ),
                ),
                (
                    "descendant",
                    models.ForeignKey(
                        db_column="descendant",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ancestors",
                        to="product.producttag",
                    ),
                ),
            ],
            options={
                "db_table": "product_tag_closure",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ProductSaleablePackageMedia",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time_deleted",
                    models.DateTimeField(
                        blank=True, default=None, editable=False, null=True
                    ),
                ),
                ("media", models.CharField(max_length=42)),
                (
                    "sale_pkg",
                    models.ForeignKey(
                        db_column="sale_pkg",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="media_set",
                        to="product.productsaleablepackage",
                    ),
                ),
            ],
            options={
                "db_table": "product_saleable_package_media",
            },
        ),
        migrations.CreateModel(
            name="ProductSaleablePackageComposite",
            fields=[
                (
                    "time_deleted",
                    models.DateTimeField(
                        blank=True, default=None, editable=False, null=True
                    ),
                ),
                ("quantity", models.FloatField()),
                (
                    "unit",
                    models.SmallIntegerField(
                        choices=[
                            (1, "unit"),
                            (2, "dz(dozen)"),
                            (65, "day"),
                            (66, "hour"),
                            (67, "minute"),
                            (68, "second"),
                            (69, "week"),
                            (70, "month"),
                            (71, "year"),
                            (129, "g"),
                            (130, "kg"),
                            (131, "t (Mg)"),
                            (132, "kt"),
                            (133, "Mt"),
                            (134, "Gt"),
                            (135, "mg"),
                            (136, "μg"),
                            (137, "ng"),
                            (138, "ton (US)"),
                            (139, "ton (UK)"),
                            (140, "lb"),
                            (141, "oz"),
                            (193, "cm"),
                            (194, "m"),
                            (195, "km"),
                            (196, "mm"),
                            (197, "μm"),
                            (198, "nm"),
                            (199, "in"),
                            (200, "ft"),
                            (201, "yd"),
                            (202, "mi"),
                            (203, "nmi"),
                            (257, "L"),
                            (258, "fl oz"),
                            (259, "mL"),
                            (260, "bbl"),
                            (261, "qt (imperial)"),
                            (262, "qt (US)"),
                            (263, "qt (UK)"),
                            (264, "tsp"),
                            (265, "tbsp (US)"),
                            (266, "tbsp (imperial)"),
                            (267, "gal (US)"),
                            (268, "gal (imperial)"),
                        ]
                    ),
                ),
                (
                    "id",
                    product.models.fields.CompoundPrimaryKeyField(
                        db_column=["sale_item", "package"],
                        editable=False,
                        inc_fields=["sale_item", "package"],
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "package",
                    models.ForeignKey(
                        db_column="package",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="saleitems_applied",
                        to="product.productsaleablepackage",
                    ),
                ),
                (
                    "sale_item",
                    models.ForeignKey(
                        db_column="sale_item",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pkgs_applied",
                        to="product.productsaleableitem",
                    ),
                ),
            ],
            options={
                "db_table": "product_saleable_package_composite",
            },
        ),
        migrations.AddField(
            model_name="productsaleablepackage",
            name="tags",
            field=models.ManyToManyField(
                db_column="tags",
                related_name="tagged_packages",
                to="product.ProductTag",
            ),
        ),
        migrations.CreateModel(
            name="ProductSaleableItemMedia",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time_deleted",
                    models.DateTimeField(
                        blank=True, default=None, editable=False, null=True
                    ),
                ),
                ("media", models.CharField(max_length=42)),
                (
                    "sale_item",
                    models.ForeignKey(
                        db_column="sale_item",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="media_set",
                        to="product.productsaleableitem",
                    ),
                ),
            ],
            options={
                "db_table": "product_saleable_item_media",
            },
        ),
        migrations.CreateModel(
            name="ProductSaleableItemComposite",
            fields=[
                (
                    "time_deleted",
                    models.DateTimeField(
                        blank=True, default=None, editable=False, null=True
                    ),
                ),
                ("quantity", models.FloatField()),
                (
                    "unit",
                    models.SmallIntegerField(
                        choices=[
                            (1, "unit"),
                            (2, "dz(dozen)"),
                            (65, "day"),
                            (66, "hour"),
                            (67, "minute"),
                            (68, "second"),
                            (69, "week"),
                            (70, "month"),
                            (71, "year"),
                            (129, "g"),
                            (130, "kg"),
                            (131, "t (Mg)"),
                            (132, "kt"),
                            (133, "Mt"),
                            (134, "Gt"),
                            (135, "mg"),
                            (136, "μg"),
                            (137, "ng"),
                            (138, "ton (US)"),
                            (139, "ton (UK)"),
                            (140, "lb"),
                            (141, "oz"),
                            (193, "cm"),
                            (194, "m"),
                            (195, "km"),
                            (196, "mm"),
                            (197, "μm"),
                            (198, "nm"),
                            (199, "in"),
                            (200, "ft"),
                            (201, "yd"),
                            (202, "mi"),
                            (203, "nmi"),
                            (257, "L"),
                            (258, "fl oz"),
                            (259, "mL"),
                            (260, "bbl"),
                            (261, "qt (imperial)"),
                            (262, "qt (US)"),
                            (263, "qt (UK)"),
                            (264, "tsp"),
                            (265, "tbsp (US)"),
                            (266, "tbsp (imperial)"),
                            (267, "gal (US)"),
                            (268, "gal (imperial)"),
                        ]
                    ),
                ),
                (
                    "id",
                    product.models.fields.CompoundPrimaryKeyField(
                        db_column=["sale_item", "ingredient"],
                        editable=False,
                        inc_fields=["sale_item", "ingredient"],
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "ingredient",
                    models.ForeignKey(
                        db_column="ingredient",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="saleitems_applied",
                        to="product.productdevingredient",
                    ),
                ),
                (
                    "sale_item",
                    models.ForeignKey(
                        db_column="sale_item",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ingredients_applied",
                        to="product.productsaleableitem",
                    ),
                ),
            ],
            options={
                "db_table": "product_saleable_item_composite",
            },
        ),
        migrations.AddField(
            model_name="productsaleableitem",
            name="tags",
            field=models.ManyToManyField(
                db_column="tags",
                related_name="tagged_products",
                to="product.ProductTag",
            ),
        ),
        migrations.CreateModel(
            name="ProductmgtSoftDeleteRecord",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time_created",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("object_id", models.CharField(db_column="object_id", max_length=100)),
                (
                    "changeset",
                    models.ForeignKey(
                        db_column="changeset",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="soft_delete_records",
                        to="product.productmgtchangeset",
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        db_column="content_type",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "db_table": "productmgt_soft_delete_record",
            },
            bases=(models.Model, softdelete.models._SoftDeleteIdSerializerMixin),
        ),
        migrations.CreateModel(
            name="ProductAttributeValueStr",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time_deleted",
                    models.DateTimeField(
                        blank=True, default=None, editable=False, null=True
                    ),
                ),
                (
                    "ingredient_id",
                    models.PositiveIntegerField(db_column="ingredient_id"),
                ),
                ("value", models.CharField(max_length=64)),
                (
                    "attr_type",
                    models.ForeignKey(
                        db_column="attr_type",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attr_val_str",
                        to="product.productattributetype",
                    ),
                ),
                (
                    "ingredient_type",
                    models.ForeignKey(
                        db_column="ingredient_type",
                        limit_choices_to=models.Q(
                            models.Q(
                                ("app_label", "product"),
                                ("model", "ProductSaleableItem"),
                            ),
                            models.Q(
                                ("app_label", "product"),
                                ("model", "ProductSaleablePackage"),
                            ),
                            models.Q(
                                ("app_label", "product"),
                                ("model", "ProductDevIngredient"),
                            ),
                            _connector="OR",
                        ),
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "db_table": "product_attribute_value_str",
            },
            bases=(models.Model, product.models.base._RelatedFieldMixin),
        ),
        migrations.CreateModel(
            name="ProductAttributeValuePosInt",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time_deleted",
                    models.DateTimeField(
                        blank=True, default=None, editable=False, null=True
                    ),
                ),
                (
                    "ingredient_id",
                    models.PositiveIntegerField(db_column="ingredient_id"),
                ),
                ("value", models.PositiveIntegerField()),
                (
                    "attr_type",
                    models.ForeignKey(
                        db_column="attr_type",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attr_val_pos_int",
                        to="product.productattributetype",
                    ),
                ),
                (
                    "ingredient_type",
                    models.ForeignKey(
                        db_column="ingredient_type",
                        limit_choices_to=models.Q(
                            models.Q(
                                ("app_label", "product"),
                                ("model", "ProductSaleableItem"),
                            ),
                            models.Q(
                                ("app_label", "product"),
                                ("model", "ProductSaleablePackage"),
                            ),
                            models.Q(
                                ("app_label", "product"),
                                ("model", "ProductDevIngredient"),
                            ),
                            _connector="OR",
                        ),
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "db_table": "product_attribute_value_pos_int",
            },
            bases=(models.Model, product.models.base._RelatedFieldMixin),
        ),
        migrations.CreateModel(
            name="ProductAttributeValueInt",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time_deleted",
                    models.DateTimeField(
                        blank=True, default=None, editable=False, null=True
                    ),
                ),
                (
                    "ingredient_id",
                    models.PositiveIntegerField(db_column="ingredient_id"),
                ),
                ("value", models.IntegerField()),
                (
                    "attr_type",
                    models.ForeignKey(
                        db_column="attr_type",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attr_val_int",
                        to="product.productattributetype",
                    ),
                ),
                (
                    "ingredient_type",
                    models.ForeignKey(
                        db_column="ingredient_type",
                        limit_choices_to=models.Q(
                            models.Q(
                                ("app_label", "product"),
                                ("model", "ProductSaleableItem"),
                            ),
                            models.Q(
                                ("app_label", "product"),
                                ("model", "ProductSaleablePackage"),
                            ),
                            models.Q(
                                ("app_label", "product"),
                                ("model", "ProductDevIngredient"),
                            ),
                            _connector="OR",
                        ),
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "db_table": "product_attribute_value_int",
            },
            bases=(models.Model, product.models.base._RelatedFieldMixin),
        ),
        migrations.CreateModel(
            name="ProductAttributeValueFloat",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time_deleted",
                    models.DateTimeField(
                        blank=True, default=None, editable=False, null=True
                    ),
                ),
                (
                    "ingredient_id",
                    models.PositiveIntegerField(db_column="ingredient_id"),
                ),
                ("value", models.FloatField()),
                (
                    "attr_type",
                    models.ForeignKey(
                        db_column="attr_type",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attr_val_float",
                        to="product.productattributetype",
                    ),
                ),
                (
                    "ingredient_type",
                    models.ForeignKey(
                        db_column="ingredient_type",
                        limit_choices_to=models.Q(
                            models.Q(
                                ("app_label", "product"),
                                ("model", "ProductSaleableItem"),
                            ),
                            models.Q(
                                ("app_label", "product"),
                                ("model", "ProductSaleablePackage"),
                            ),
                            models.Q(
                                ("app_label", "product"),
                                ("model", "ProductDevIngredient"),
                            ),
                            _connector="OR",
                        ),
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "db_table": "product_attribute_value_float",
            },
            bases=(models.Model, product.models.base._RelatedFieldMixin),
        ),
        migrations.CreateModel(
            name="ProductAppliedAttributePrice",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time_deleted",
                    models.DateTimeField(
                        blank=True, default=None, editable=False, null=True
                    ),
                ),
                ("attrval_id", models.PositiveIntegerField(db_column="attrval_id")),
                ("amount", models.FloatField(default=0.0)),
                (
                    "attrval_type",
                    models.ForeignKey(
                        db_column="attrval_type",
                        limit_choices_to=models.Q(
                            models.Q(
                                ("app_label", "product"),
                                ("model", "ProductAttributeValueStr"),
                            ),
                            models.Q(
                                ("app_label", "product"),
                                ("model", "ProductAttributeValueFloat"),
                            ),
                            models.Q(
                                ("app_label", "product"),
                                ("model", "ProductAttributeValuePosInt"),
                            ),
                            models.Q(
                                ("app_label", "product"),
                                ("model", "ProductAttributeValueInt"),
                            ),
                            _connector="OR",
                        ),
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "db_table": "product_applied_attribute_price",
            },
        ),
        migrations.AddConstraint(
            model_name="producttagclosure",
            constraint=models.UniqueConstraint(
                fields=("ancestor", "descendant"), name="unique_path"
            ),
        ),
    ]
