"""drop pk reference from fileaccesscontrollist  and filereference

Revision ID: da2eb9e7c659
Revises: b0e998cfa9de
Create Date: 2021-06-21 00:33:01.391436

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'da2eb9e7c659'
down_revision = 'b0e998cfa9de'
branch_labels = None
depends_on = None


def upgrade(is_offline, from_revision, to_revision, service_db, auth_url=None, sql_exe=None):
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('fileaccesscontrollist_ibfk_1', 'fileaccesscontrollist', type_='foreignkey')
    op.drop_index(table_name='fileaccesscontrollist', index_name='PRIMARY')
    op.drop_column('fileaccesscontrollist', 'resource_id')
    op.drop_constraint('filereference_ibfk_1', 'filereference', type_='foreignkey')
    op.execute(sqltext='ALTER TABLE `filereference` DROP PRIMARY KEY')
    op.drop_column('filereference', 'resource_id')
    op.drop_index(table_name='uploadedfile', index_name='PRIMARY')
    op.drop_column('uploadedfile', 'id')

    op.add_column('uploadedfile', sa.Column('hashed', sa.BINARY(length=20), nullable=False))
    op.add_column('uploadedfile', sa.Column('duplicate', sa.SmallInteger(), server_default='0', nullable=False))
    op.create_primary_key(constraint_name=None , table_name='uploadedfile', columns=['hashed','duplicate'])
    op.add_column('filereference', sa.Column('file_hashed', sa.BINARY(length=20), nullable=False))
    op.add_column('filereference', sa.Column('file_dup', sa.SmallInteger(), nullable=False))
    op.alter_column('filereference', column_name='service_label', type_=sa.SmallInteger(), nullable=False)
    op.create_primary_key(constraint_name=None , table_name='filereference', columns=['file_hashed', 'file_dup', 'service_label'])
    op.create_foreign_key('filereference_ibfk_1', 'filereference', 'uploadedfile',
            ['file_hashed', 'file_dup'], ['hashed', 'duplicate'])
    op.add_column('fileaccesscontrollist', sa.Column('file_hashed', sa.BINARY(length=20), nullable=False))
    op.add_column('fileaccesscontrollist', sa.Column('file_dup', sa.SmallInteger(), nullable=False))
    op.alter_column('fileaccesscontrollist', column_name='prof_id', type_=sa.String(length=6), nullable=False)
    op.create_primary_key(constraint_name=None , table_name='fileaccesscontrollist', columns=['file_hashed', 'file_dup', 'prof_id'])
    op.create_foreign_key('fileaccesscontrollist_ibfk_1', 'fileaccesscontrollist', 'uploadedfile',
            ['file_hashed', 'file_dup'], ['hashed', 'duplicate'])

    op.drop_column('uploadedfile', 'path')
    op.drop_column('uploadedfile', 'owner')
    op.add_column('uploadedfile', sa.Column('discard', sa.Boolean(), nullable=True))
    # ### end Alembic commands ###


def downgrade(is_offline, from_revision, to_revision, service_db, auth_url=None, sql_exe=None):
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('uploadedfile', 'discard')
    op.add_column('uploadedfile', sa.Column('owner', mysql.VARCHAR(collation='utf8mb4_bin', length=16), nullable=True))
    op.add_column('uploadedfile', sa.Column('path', mysql.VARCHAR(collation='utf8mb4_bin', length=256), nullable=True))

    op.drop_constraint('fileaccesscontrollist_ibfk_1', 'fileaccesscontrollist', type_='foreignkey')
    op.drop_index(table_name='fileaccesscontrollist', index_name='PRIMARY')
    op.alter_column('fileaccesscontrollist', column_name='prof_id', type_=sa.String(length=16), nullable=False)
    op.drop_column('fileaccesscontrollist', 'file_hashed')
    op.drop_column('fileaccesscontrollist', 'file_dup')
    op.drop_constraint('filereference_ibfk_1', 'filereference', type_='foreignkey')
    op.drop_index(table_name='filereference', index_name='PRIMARY')
    op.alter_column('filereference', column_name='service_label', type_=sa.String(length=20), nullable=False)
    op.drop_column('filereference', 'file_hashed')
    op.drop_column('filereference', 'file_dup')
    op.drop_index(table_name='uploadedfile', index_name='PRIMARY')
    op.drop_column('uploadedfile', 'duplicate')
    op.drop_column('uploadedfile', 'hashed')

    op.add_column('uploadedfile', sa.Column('id', mysql.VARCHAR(collation='utf8mb4_bin', length=16), nullable=False))
    op.create_primary_key(constraint_name=None , table_name='uploadedfile', columns=['id',])
    op.add_column('filereference', sa.Column('resource_id', mysql.VARCHAR(collation='utf8mb4_bin', length=16), nullable=False))
    op.create_primary_key(constraint_name=None , table_name='filereference', columns=['resource_id', 'service_label'])
    op.create_foreign_key('filereference_ibfk_1', 'filereference', 'uploadedfile', ['resource_id'], ['id'])
    op.add_column('fileaccesscontrollist', sa.Column('resource_id', mysql.VARCHAR(collation='utf8mb4_bin', length=16), nullable=False))
    # for creating PRIMARY KEY index in mysql / mariadb,  you should NOT set `PRIMARY` to
    # `constraint_name` , otherwise mysql will report ERROR 1280 (42000): Incorrect index name 'PRIMARY'
    # instead you should set None to `constraint_name`
    op.create_primary_key(constraint_name=None , table_name='fileaccesscontrollist', columns=['resource_id', 'prof_id'])
    ##op.execute(sqltext='ALTER TABLE `fileaccesscontrollist` ADD INDEX `PRIMARY` USING BTREE (`resource_id`, `prof_id`)')
    op.create_foreign_key('fileaccesscontrollist_ibfk_1', 'fileaccesscontrollist', 'uploadedfile', ['resource_id'], ['id'])
    # ### end Alembic commands ###

