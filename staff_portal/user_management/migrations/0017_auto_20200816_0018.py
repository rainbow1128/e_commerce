# Generated by Django 3.1 on 2020-08-15 16:18

from django.db import migrations, models
import django.db.models.deletion
from common.models.migrations import AlterTablePrivilege


class Migration(migrations.Migration):

    dependencies = [
        ('user_management', '0016_auto_20200731_1956'),
    ]

    operations = [
        migrations.AlterField(
            model_name='authuserresetrequest',
            name='time_created',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='genericuserauthrelation',
            name='profile',
            field=models.OneToOneField(db_column='profile', on_delete=django.db.models.deletion.CASCADE, related_name='auth', to='user_management.genericuserprofile'),
        ),
        migrations.AlterField(
            model_name='genericuserprofile',
            name='groups',
            field=models.ManyToManyField(blank=True, db_table='generic_user_group_relation', related_name='user_profiles', to='user_management.GenericUserGroup'),
        ),
        migrations.DeleteModel(
            name='GenericGroupAuthRelation',
        ),
    ]

    def __new__(cls, *args, **kwargs):
        if not hasattr(cls, '_privilege_update_init'):
            for op in cls.operations:
                if isinstance(op, AlterTablePrivilege.ACCEPTED_OPERATIONS):
                    op._priv_lvl = AlterTablePrivilege.PRIVILEGE_MAP['READ_WRITE']
            privilege_update_obj = AlterTablePrivilege( autogen_ops=cls.operations,  db_setup_tag='usermgt_service')
            cls._privilege_update_init = True
        return super().__new__(cls)

